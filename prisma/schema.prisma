generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  firstName        String
  lastName         String
  email            String         @unique
  password         String
  teamId           Int?
  approvedAbsences Absence[]      @relation("AbsenceApprover")
  absences         Absence[]
  notifications    Notification[]
  managedTeams     Team[]         @relation("TeamManager")
  team             Team?          @relation(fields: [teamId], references: [id])
  roles            Role[]         @relation("UserRoles")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[] @relation("UserRoles")
}

model Team {
  id        Int    @id @default(autoincrement())
  name      String
  managerId Int?
  manager   User?  @relation("TeamManager", fields: [managerId], references: [id])
  members   User[]
}

model Absence {
  id             Int      @id @default(autoincrement())
  type           String
  startDate      DateTime
  endDate        DateTime
  comment        String?
  status         String   @default("pending")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  userId         Int
  approverId     Int?
  refusalComment String?
  approver       User?    @relation("AbsenceApprover", fields: [approverId], references: [id])
  user           User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  createdAt DateTime @default(now())
  read      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
}
