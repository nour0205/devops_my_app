generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String      
  role          UserRole
  department    String
  leaveBalance  Int             @default(0)
  totalLeaves   Int             @default(20)

  leaveRequests LeaveRequest[]  @relation("EmployeeRequests")
  reviews        LeaveRequest[] @relation("ManagerReviews") // âœ… FIXED: removed fields + references

  notifications Notification[]
  auditLogs     AuditLog[]

  createdAt     DateTime        @default(now())
}

model LeaveRequest {
  id              String    @id @default(uuid())
  employee        User      @relation("EmployeeRequests", fields: [employeeId], references: [id])
  employeeId      String
  employeeName    String

  startDate       DateTime
  endDate         DateTime
  reason          String
  status          LeaveStatus   @default(pending)
  requestedAt     DateTime      @default(now())

  reviewedAt      DateTime?
  reviewedBy      User?         @relation("ManagerReviews", fields: [reviewedById], references: [id])
  reviewedById    String?
  reviewedByName  String?
  reviewNotes     String?

  attachments     Attachment[]
}

model Attachment {
  id              String       @id @default(uuid())
  leaveRequest    LeaveRequest @relation(fields: [leaveRequestId], references: [id])
  leaveRequestId  String
  fileUrl         String
  uploadedAt      DateTime     @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model AuditLog {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  action    String
  targetId  String?
  details   String?
  createdAt DateTime @default(now())
}

enum UserRole {
  employee
  manager
}

enum LeaveStatus {
  pending
  approved
  rejected
}
